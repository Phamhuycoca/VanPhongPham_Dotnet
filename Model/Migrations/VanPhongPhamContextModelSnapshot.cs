// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Context;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(VanPhongPhamContext))]
    partial class VanPhongPhamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Model.ChiTietDonHang", b =>
                {
                    b.Property<int>("ChiTietDonHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietDonHangId"), 1L, 1);

                    b.Property<int>("DonHangId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamGia")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ChiTietDonHangId");

                    b.HasIndex("DonHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietDonHang", (string)null);
                });

            modelBuilder.Entity("Model.Model.DonHang", b =>
                {
                    b.Property<int>("DonHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonHangId"), 1L, 1);

                    b.Property<string>("NgayTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("DonHangId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("Model.Model.LoaiSanPham", b =>
                {
                    b.Property<int>("LoaiSanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoaiSanPhamId"), 1L, 1);

                    b.Property<string>("TenLoaiSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiSanPhamId");

                    b.ToTable("LoaiSanPham", (string)null);
                });

            modelBuilder.Entity("Model.Model.NguoiDung", b =>
                {
                    b.Property<int>("NguoiDungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NguoiDungId"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("NguoiDungId");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("Model.Model.SanPham", b =>
                {
                    b.Property<int>("SanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SanPhamId"), 1L, 1);

                    b.Property<int>("LoaiSanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamGia")
                        .HasColumnType("int");

                    b.Property<string>("SanPhamHinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SanPhamNguonGoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SanPhamTen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SanPhamId");

                    b.HasIndex("LoaiSanPhamId");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("Model.Model.ChiTietDonHang", b =>
                {
                    b.HasOne("Model.Model.DonHang", "donHang")
                        .WithMany("chiTietDonHangs")
                        .HasForeignKey("DonHangId")
                        .IsRequired();

                    b.HasOne("Model.Model.SanPham", "sanPham")
                        .WithMany("chiTietDonHangs")
                        .HasForeignKey("SanPhamId")
                        .IsRequired();

                    b.Navigation("donHang");

                    b.Navigation("sanPham");
                });

            modelBuilder.Entity("Model.Model.DonHang", b =>
                {
                    b.HasOne("Model.Model.NguoiDung", "nguoiDung")
                        .WithMany("donHangs")
                        .HasForeignKey("NguoiDungId")
                        .IsRequired();

                    b.Navigation("nguoiDung");
                });

            modelBuilder.Entity("Model.Model.SanPham", b =>
                {
                    b.HasOne("Model.Model.LoaiSanPham", "LoaiSanPham")
                        .WithMany("sanPhams")
                        .HasForeignKey("LoaiSanPhamId")
                        .IsRequired();

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("Model.Model.DonHang", b =>
                {
                    b.Navigation("chiTietDonHangs");
                });

            modelBuilder.Entity("Model.Model.LoaiSanPham", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("Model.Model.NguoiDung", b =>
                {
                    b.Navigation("donHangs");
                });

            modelBuilder.Entity("Model.Model.SanPham", b =>
                {
                    b.Navigation("chiTietDonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
